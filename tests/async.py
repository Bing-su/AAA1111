import re
from pathlib import Path

from rich.progress import track

tests_dir = Path(__file__).parent

py_files = [
    file
    for file in tests_dir.rglob("*.py")
    if file.name.startswith("test") and not file.name.startswith("test_async")
]

func_pattern = re.compile(r"def (?P<func>[^\(]+)(?!\()")
api_pattern = re.compile(r"self\.api\.")


for file in track(py_files):
    lines = []

    with file.open(encoding="utf-8") as f:
        for line in f:
            if func_pattern.search(line):
                new = func_pattern.sub(lambda m: f"async def {m.group('func')}", line)
            elif api_pattern.search(line):
                new = api_pattern.sub("await self.api.a", line)
            else:
                new = line
            lines.append(new)

    new_file_name = "test_async_" + file.name.split("_")[-1]
    new_file = tests_dir.joinpath(new_file_name)

    with new_file.open("w", encoding="utf-8") as f:
        f.write("# This file was autogenerated from running 'tests/async.py'.\n\n")
        f.writelines(lines)
